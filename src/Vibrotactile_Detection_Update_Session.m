function Vibrotactile_Detection_Update_Session(behavior, trial)

%
%Vibrotactile_Detection_Task_Update_behavior.session.params.m - Vulintus, Inc.
%
%   VIBROTACTILE_DETECTION_TASK_UPDATE_SESSION adds the results of the most
%   recent trial to the session data and updates the performance plots.
%   
%   UPDATE LOG:
%   01/24/2020 - Drew Sloan - Function first implemented.
%   11/24/2021 - Drew Sloan - Changed function name to
%       Vibrotactile_Detection_Task_Update_behavior.session.params.m
%

if trial.params.time_held > trial.params.hold_time                                        %If the rat held longer than the required hold time...
    if trial.params.time_held < (trial.params.hold_time + behavior.session.params.hitwin)                 %If the animal released before the end of the hit window.
        if trial.params.catch == 1                                                 %If this was a catch trial.params...
            trial.params.outcome = 'FALSE ALARM';                                  %Label the trial as a false alarm.
        else                                                                %Otherwise, if this wasn't a catch trial.params...
            trial.params.outcome = 'HIT';                                          %Label the trial as a hit.
            behavior.ctrl.feed.start();                                            %Trigger a feeding.
            trial.params.feed_time = now;                                          %Save the feeding time.     
            behavior.session.count.feedings = behavior.session.count.feedings + 1;                        %Increment the feedings count.
        end
    else                                                                    %Otherwise, if the animal didn't release before the end of the hit window...
        if trial.params.catch == 1                                                 %If this was a catch trial.params...
            trial.params.outcome = 'CORRECT REJECTION';                            %Label the trial as a correct rejection.
        else                                                                %Otherwise, if this wasn't a catch trial.params...
            trial.params.outcome = 'MISS';                                         %Label the trial as a miss.
        end
    end
else                                                                        %Otherwise, if the rat didn't hold...
    trial.params.outcome = 'ABORT';                                                %Label the trial as an abort.
end

%Save the trial information in the session-tracking structure.
i = find(trial.params.outcome(1) == 'HMFCA') + 2;                                  %Find the row index for this outcome.
j = (trial.params.vib_rate == behavior.session.params.counts(1,:)) & ...
    (trial.params.gap_length == behavior.session.params.counts(2,:));                              %Find the column index for this vibration rate and gap length combination.
behavior.session.params.counts(i,j) = behavior.session.params.counts(i,j) + 1;                              %Increment this outcome count.
behavior.session.params.vib_rate(behavior.session.count.trial, 1) = trial.params.vib_rate;                    %Save the trial vibration rate.
behavior.session.params.actual_vib_rate(behavior.session.count.trial, 1) = trial.params.actual_vib_rate;      %Save the trial actual vibration rate.
behavior.session.params.gap_length(behavior.session.count.trial, 1) = trial.params.gap_length;                %Save the trial gap length.
behavior.session.params.actual_gap_length(behavior.session.count.trial, 1) = trial.params.actual_gap_length;  %Save the trial actual gap length.
behavior.session.params.duration(behavior.session.count.trial, 1) = trial.params.vib_dur;                     %Save the trial pulse duration.
behavior.session.params.outcome(behavior.session.count.trial, 1) = trial.params.outcome(1);                   %Save the trial outcome.
behavior.session.params.time_held(behavior.session.count.trial, 1) = trial.params.time_held;                  %Save the time held.
behavior.session.params.hold_time(behavior.session.count.trial, 1) = trial.params.hold_time;                  %Save the hold time.
if trial.params.outcome(1) == 'H'                                                  %If the trial resulted in a hit...
    behavior.session.params.response_time(behavior.session.count.trial, 1) = ...
        trial.params.time_held(1) - trial.params.hold_time;                               %Save the response time.
else                                                                        %Otherwise...
    behavior.session.params.response_time(behavior.session.count.trial, 1) = NaN;                      %Save a NaN.
end

%Print a message to the messagebox.
if trial.params.outcome(1) == 'A'                                                  %If the trial ended in an abort...
    str = sprintf(['%s - Trial #%1.0f (ABORT), '...
        'rate = %1.1f Hz, '...
        'hold time = %1.2f s, '...
        'time held = %1.2f s'],...
        datestr(trial.params.start_time,13),...
        behavior.session.count.trial,...
        trial.params.vib_rate,...
        trial.params.hold_time,...
        trial.params.time_held);                                                   %Create a text string.
    behavior.session.params.stim_block(end+1,:) = behavior.session.params.stim_block(behavior.session.params.stim_index,:); %Move the current trial parameters to the end of the stimulus block.
    behavior.session.params.stim_block(behavior.session.params.stim_index,:) = [];                          %Clear the current line of the stimulus block.
else                                                                        %Otherwise...
    str = sprintf(['%s - Trial #%1.0f (%s), '...
        'rate = %1.1f Hz, '...
        'gap = %1.0f ms, '...
        'hold time = %1.2f s'],...
        datestr(trial.params.start_time,13),...
        behavior.session.count.trial,...
        trial.params.outcome,...
        trial.params.vib_rate,...
        trial.params.gap_length,...
        trial.params.hold_time);                                                   %Create a text string.
    behavior.session.params.stim_index = behavior.session.params.stim_index + 1;                            %Increment the stimulus index.
    if behavior.session.params.stim_index > size(behavior.session.params.stim_block,1)                      %If there's no more parameters in the stimulus block...
        behavior.session.params.stim_block = ...
            Vibrotactile_Detection_Task_Create_Stimulus_Block(behavior.session.params);     %Create a new stimulus block.
        behavior.session.params.stim_index = 1;                                             %Set the stimulus index to 1.
    end
end
Replace_Msg(behavior.ui.msgbox,str);                                            %Show the text string on the messagebox.