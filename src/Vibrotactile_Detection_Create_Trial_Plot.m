function Vibrotactile_Detection_Create_Trial_Plot(behavior,trial)

%
% Vibrotactile_Detection_Create_Trial_Plot.m
% 
%   copyright 2024, Vulintus, Inc.
%
%   VIBROTACTILE_DETECTION__CREATE_TRIAL_PLOT creates a diagram of the
%   current trial on the data axes for the SensiTrak vibrotactile detection
%   task.
%   
%   UPDATE LOG:
%   2024-11-13 - Drew Sloan - Function first implemented, adapted from
%                             "Vibrotactile_Detection_Task_Create_Trial_Plot.m"
%


cla(behavior.ui.ax.data);                                                      %Create the psychophysical plot axes.
hold(behavior.ui.ax.data, 'on');                                               %Hold the axes for multiple plots.
x_limits = [-0.05, 1.05]*trial.params.dur;                                         %Calculate x-axis bounds.           
set(behavior.ui.ax.data,'xlim',x_limits,'ylim',[-0.1,1.1]);                    %Set the x- and y-axis limits.

ipi = trial.params.vib_ipi/1000;                                                   %Convert the inter-pulse interval to seconds.
pulse_dur = trial.params.vib_dur/1000;                                             %Convert the pulse duration to seconds.
y = [0 1 1 0 0];                                                            %Create y-coordinates for a box showing the hit window.
x = trial.params.hold_time + behavior.session.params.hitwin*[0 0 1 1 0];                           %Calculate x-coordinates for a box showing the hit window.
fill(x,y,[0.75 0.75 0.75],...
        'edgecolor',[0.75 0.75 0.75],...
        'linewidth',2,...
        'parent',behavior.ui.ax.data);                                         %Create a filled rectangle for each pulse.
for i = 1:trial.params.vib_n                                                       %Step through each pulse.
    x = ipi*(i-1) + pulse_dur*[0 0 1 1 0];                                  %Create x-coordinates to show the pulse.
    fh = fill(x,0.9*y,[0 0 0.5],...
        'edgecolor','none',...
        'parent',behavior.ui.ax.data);                                         %Create a filled rectangle for each pulse.
    if strcmpi(behavior.session.params.task_mode,'burst')                                   %If the task is in burst mode...
        set(fh,'ydata',0.1*y);                                              %Make the pulse shorter.
    end
    if i >= trial.params.gap_start && i <= trial.params.gap_stop                          %If this is the gap pulse...
        if trial.params.catch == 1                                                 %If this is a catch trial...
            set(fh,'facecolor',[0 0.5 0],...
                'edgecolor',[0 0.5 0]);                                     %Color the pulse red.
        else                                                                %Otherwise...
            set(fh,'facecolor',[0 0.5 0],...
                'edgecolor',[0 0.5 0],...
                'ydata',0.1*y);                                             %Color the pulse green.
            if strcmpi(behavior.session.params.task_mode,'burst')                           %If the task is in burst mode...
                set(fh,'ydata',0.9*y);                                      %Make the pulse taller.
            end
        end       
    end    
end
line([0,0],[-0.1,1.1],...
    'linestyle','--',...
    'color','k',...
    'parent',behavior.ui.ax.data);                                             %Plot a line showing the trial start.
line(x_limits,[0,0],...
    'linestyle','-',...
    'linewidth',2,...
    'color','k',...
    'parent',behavior.ui.ax.data);                                             %Plot a line across the plot at zero.
text(0,1.1,sprintf(' Trial #%1.0f',behavior.session.count.trial),...
    'horizontalalignment','left',...
    'verticalalignment','top',...
    'fontweight','bold',...
    'fontsize',10,...
    'parent',behavior.ui.ax.data);                                             %Label the plot.

trial.params.prog_line = line([0,0],[-0.1,1.1],...
    'linestyle',':',...
    'color','k',...
    'linewidth',2,...
    'parent',behavior.ui.ax.data);                                             %Create a line to show the current time.

str = sprintf(['%s - Starting Trial #%1.0f, '...
    'rate = %1.1f Hz, '...
    '%s = %1.0f ms, '...
    'hold time = %1.2f s (catch = %1.0f)...'],...
    datestr(trial.params.start_time,13),...
    behavior.session.count.trial,...
    trial.params.vib_rate,...
    behavior.session.params.task_mode,...
    trial.params.gap_length,...
    trial.params.hold_time,...
    trial.params.catch);                                                           %Create a text string.
Add_Msg(behavior.ui.msgbox,str);                                                %Show the text string on the messagebox.