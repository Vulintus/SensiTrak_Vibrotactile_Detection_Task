function ctrl = Vulintus_OTSC_Cue_Light_Functions(ctrl, otsc_codes, varargin)

%Vulintus_OTSC_Cue_Light_Functions.m - Vulintus, Inc., 2023
%
%   VULINTUS_OTSC_CUE_LIGHT_FUNCTIONS defines and adds OmniTrak Serial
%   Communication (OTSC) functions to the control structure for Vulintus
%   OmniTrak devices which have cue light capabilities.
% 
%   NOTE: These functions are designed to be used with the "serialport" 
%   object introduced in MATLAB R2019b and will not work with the older 
%   "serial" object communication.
%
%   UPDATE LOG:
%   2023-10-03 - Drew Sloan - Function first created.
%   2023-12-07 - Drew Sloan - Updated calls to "Vulintus_Serial_Request" to
%                             allow multi-type responses.
%   2024-01-31 - Drew Sloan - Added optional input arguments for
%                             passthrough commands.
%   2024-02-22 - Drew Sloan - Organized functions by scope into subfields.
%                             Changed the function name from 
%                             "Vulintus_OTSC_Light_Functions" to
%                             "Vulintus_OTSC_Cue_Light_Functions".
%   2024-06-07 - Drew Sloan - Added a optional "devices" input argument to
%                             selectively add the functions to the control 
%                             structure.
%


%List the Vulintus devices that use these functions.
device_list = { 'MT-PP',...
                'OT-3P',...
                'OT-NP',...
                'OT-PR',...
                'OT-LR'};

%If an cell arracy of connected devices was provided, match against the device lis.
if nargin > 2
    connected_devices = varargin{1};                                        %Grab the list of connected devices.
    [~,i,~] = intersect(connected_devices,device_list);                     %Look for any matches between the two device lists.
    if ~any(i)                                                              %If no match was found...
        if isfield(ctrl,'cue')                                              %If there's a "cue" field in the control structure...
            ctrl = rmfield(ctrl,'cue');                                     %Remove it.
        end
        return                                                              %Skip execution of the rest of the function.
    end
end

serialcon = ctrl.serialcon;                                                 %Grab the handle for the serial connection.

%Cue light functions.
ctrl.cue = [];                                                              %Create a field to hold cue light functions.

%Show the specified cue light.
ctrl.cue.on = ...
    @(i,varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_ON,...
    'data',{i,'uint8'},...
    varargin{:});                         

%Turn off any active cue light.
ctrl.cue.off = ...
    @(varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_OFF,...
    varargin{:});         

%Request/set the current cue light index.
ctrl.cue.index.get = ...
    @(varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.REQ_CUE_LIGHT_INDEX,...
    'reply',{1,'uint8'},...
    varargin{:});             
ctrl.cue.index.set = ...
    @(i,varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_INDEX,...
    'data',{i,'uint8'},...
    varargin{:});

%Request/set the current cue light queue index.
ctrl.cue.queue_index.get = ...
    @(varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.REQ_CUE_LIGHT_QUEUE_INDEX,...
    'reply',{1,'uint8'},...
    varargin{:});   
ctrl.cue.queue_index.set = ...
    @(i,varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_QUEUE_INDEX,...
    'data',{i,'uint8'},...
    varargin{:});

%Request/set the RGBW values for the current cue light (0-255).
ctrl.cue.rgbw.get =...
    @(varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.REQ_CUE_LIGHT_RGBW,...
    'reply',{4,'uint8'},...
    varargin{:});       
ctrl.cue.rgbw.set = ...
    @(rgbw,varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_RGBW,...
    'data',{rgbw,'uint8'},...
    varargin{:});

%Request/set the current cue light duration, in milliseconds.
ctrl.cue.dur.get = ...
    @(varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.REQ_CUE_LIGHT_DUR,...
    'reply',{1,'uint16'},...
    varargin{:});         
ctrl.cue.dur.set = ...
    @(i,varargin)Vulintus_OTSC_Transaction(serialcon,...
    otsc_codes.CUE_LIGHT_DUR,...
    'data',{i,'uint16'},...
    varargin{:});

     