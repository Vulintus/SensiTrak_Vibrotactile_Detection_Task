function Vibrotactile_Detection_Session_Update(behavior)

%
% Vibrotactile_Detection_Session_Update.m
% 
%   copyright 2020, Vulintus, Inc.
%
%   VIBROTACTILE_DETECTION_SESSION_UPDATE adds the results of the most
%   recent trial to the session data and updates the performance plots.
%   
%   UPDATE LOG:
%   2020-01-24 - Drew Sloan - Function first implemented.
%   2021-11-24 - Drew Sloan - Changed function name to
%                             "Vibrotactile_Detection_Task_Update_Session".
%   2025-05-21 - Drew Sloan - Renamed from 
%                             "Vibrotactile_Detection_Update_Session" to
%                             "Vibrotactile_Detection_Session_Update".
%

%Save the trial information in the session-tracking structure.
outcome_i = find(behavior.session.trial(end).outcome(1) == 'HMFCA') + 2;    %Find the row index for this outcome.
j = (behavior.session.trial(end).params.vib_rate == ...
    behavior.session.count.outcomes(1,:)) & ...
    (behavior.session.trial(end).params.gap_length == ...
    behavior.session.count.outcomes(2,:));                                  %Find the column index for this vibration rate and gap length combination.
behavior.session.count.outcomes(outcome_i,j) = ...
    behavior.session.count.outcomes(outcome_i,j) + 1;                       %Increment this outcome count.
if behavior.session.trial(end).outcome(1) == 'H'                            %If the trial resulted in a hit...
    behavior.session.trial(end).time.response = ...
        behavior.session.trial(end).params.time_held(1) - ...
        behavior.session.trial(end).params.hold_time;                       %Save the response time.
else                                                                        %Otherwise...
    behavior.session.trial(end).time.response = NaN;                        %Save a NaN.
end

%Print a message to the messagebox.
if behavior.session.trial(end).outcome(1) == 'A'                            %If the trial ended in an abort...
    str = sprintf(['%s - Trial #%1.0f (ABORT), '...
        'rate = %1.1f Hz, '...
        'hold time = %1.2f s, '...
        'time held = %1.2f s'],...
        char(behavior.session.trial(end).time.start.datetime,'HH:mm:ss'),...
        behavior.session.count.trial,...
        behavior.session.trial(end).params.vib_rate,...
        behavior.session.trial(end).params.hold_time,...
        behavior.session.trial(end).params.time_held);                      %Create a text string.
    s = behavior.session.params.stim_index;                                 %Grab the current stimulus index.
    behavior.session.params.stim_block(end+1,:) = ...
        behavior.session.params.stim_block(s,:);                            %Move the current trial parameters to the end of the stimulus block.
    behavior.session.params.stim_block(s,:) = [];                           %Clear the current line of the stimulus block.
else                                                                        %Otherwise...
    str = sprintf(['%s - Trial #%1.0f (%s), '...
        'rate = %1.1f Hz, '...
        'gap = %1.0f ms, '...
        'hold time = %1.2f s'],...
        char(behavior.session.trial(end).time.start.datetime,'HH:mm:ss'),...
        behavior.session.count.trial,...
        behavior.session.trial(end).outcome,...
        behavior.session.trial(end).params.vib_rate,...
        behavior.session.trial(end).params.gap_length,...
        behavior.session.trial(end).params.hold_time);                      %Create a text string.
    behavior.session.params.stim_index = ...
        behavior.session.params.stim_index + 1;                             %Increment the stimulus index.
    if behavior.session.params.stim_index > ...
            size(behavior.session.params.stim_block,1)                      %If there's no more parameters in the stimulus block...
        behavior.session.params.stim_block = ...
            Vibrotactile_Detection_Task_Create_Stimulus_Block(behavior.session.params);     %Create a new stimulus block.
        behavior.session.params.stim_index = 1;                             %Set the stimulus index to 1.
    end

    %Add the trial parameters to the running list for psychophysical plotting.
    behavior.session.params.gap_length(end+1,1) = ...
        behavior.session.trial(end).params.gap_length;                      
    behavior.session.params.actual_gap_length(end+1,1) = ...
        behavior.session.trial(end).params.actual_gap_length;   
    behavior.session.params.vib_rate(end+1,1) = ...
        behavior.session.trial(end).params.vib_rate;   
    behavior.session.params.actual_vib_rate(end+1,1) = ...
        behavior.session.trial(end).params.actual_vib_rate;   
end
Replace_Msg(behavior.ui.msgbox,str);                                        %Show the text string on the messagebox.

%Update the data table.
new_table_row = {   sprintf('%1.0f', behavior.session.count.trial)...                           %Trial
                    char(behavior.session.trial(end).time.start.datetime,'hh:mm:ss'),...        %Time
                    sprintf('%1.2f', behavior.session.trial(end).params.hold_time),...          %Hold (s)
                    sprintf('%1.2f', behavior.session.trial(end).params.time_held),...          %Held (s)
                    sprintf('%1.1f', behavior.session.trial(end).params.actual_vib_rate),...    %Rate (Hz)
                    sprintf('%1.0f', behavior.session.trial(end).params.actual_gap_length),...  %Burst/Gap (ms)                    
                    behavior.session.trial(end).outcome,...                                     %Outcome
                    sprintf('%1.0f', behavior.session.count.feed),...                           %Feedings
                };                                                          %Create a new table row.
behavior.ui.table.trial.Data(end+1,:) = new_table_row;                      %Clear the table data.
addStyle(behavior.ui.table.trial,...
    behavior.ui.table.style.h(outcome_i-2),...
    'cell',[behavior.session.count.trial,7]);                               %Color the outcome cell according to the score.
scroll(behavior.ui.table.trial,'bottom');                                   %Scroll to the bottom of the table.

%Update the running list of times held for plotting.
behavior.session.params.time_held(end+1,1) = ...
    behavior.session.trial(end).params.time_held;                           %Add the time held to the running list.

behavior.session.file.write{'VIBROTACTILE_DETECTION_TASK_TRIAL'}(behavior); %Write the trial data to the data file.  